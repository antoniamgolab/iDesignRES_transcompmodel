var documenterSearchIndex = {"docs":
[{"location":"examples/basque-case/#Basque-case-study","page":"Basque Country","title":"Basque case study","text":"","category":"section"},{"location":"examples/basque-case/#Case-study-description","page":"Basque Country","title":"Case study description","text":"","category":"section"},{"location":"examples/basque-case/","page":"Basque Country","title":"Basque Country","text":"The case study encompasses the federal state Basque Community in Spain. This consists of three subregions which is the spatial extent of the case study, considering the trips within the regions and between the three regions. The temporal horizon is 2020-2050 with considering vehicles bought since 1995. \nFive income levels are considered among with also commercial trips. These are called First quintile, Second quintile, Third quintile, Fourth quintile, Fifth quintile and Commercial in the input data which are defined under FinancialStatus and for all corresponding trips in Odpairs. The First quintile is the consumer group with lowest available budget, while the Fifth quintile the one with the highest.\nAlso purposes \nConsidered modes are road and public transport.\nVehicle types: small passenger cars, medium passenger cars, SUVs and busses.\nconsidered technologies are internal comubustion engine (ICE) and battery-electric (BE)\nFuels: diesel and electricity\nFor the trip data, a data set is used which contains origin-destination trip data classified by mode and purpose. For the case study, the classification by purpose is introduced by considering different average path lengths. ","category":"page"},{"location":"examples/basque-case/#Description-of-the-input-data","page":"Basque Country","title":"Description of the input data","text":"","category":"section"},{"location":"examples/basque-case/","page":"Basque Country","title":"Basque Country","text":"The input file for this case studdy can be found unter examples\\Basque country\\data\\basque_country_input.yaml. The data input is ordered alphabetically after the key name. ","category":"page"},{"location":"examples/basque-case/","page":"Basque Country","title":"Basque Country","text":"GeographicElement describes all geographic features of the case study, together with the local carbon pricing development which is assumed here to be constant 60 euros/tCO2. The naming of the geographic features follows the NUTS-3 classification for the European Union.\nMode, Technology, Vehicletype, Fuel and TechVehicle desribe the portfolio for the supply of transport services. The technical developments of the drive-train technologies are included in the key TechVehicle, where technical aspects are given for the all generations of vehicles (Important: A generation is the year in which the vehicle type of a certain technology is released on the market.). As maintenance costs increase depending on the vehicle's age. Therefore, the parameters related to this are two-dimensional lists and defined for Generation times Lifetime. \nOdpair, Regiontype,  FinancialStatus, Product and Path encompass all information of the demand side. Odpair displays trip magnitudes to be covered, while Path the geographic allocation of possible travel paths between origin and destination. The consumer resources and consumer-specific characteristics which are not trip-related are in FinancialStatus. Next to the monetary budget and the definition of the purchase horizon which relates to the frequency of the purchase of a new vehicle, the Value of Time (VoT) is an important parameter. It assigns a monetary value to the time spend on travel. \nInitialVehicleStock, InitialFuelingInfr and InitialModeInfr comprise the information of the initial values on infrastructure capacities and vehicle stock for the case study.","category":"page"},{"location":"examples/basque-case/#Data-sources","page":"Basque Country","title":"Data sources","text":"","category":"section"},{"location":"examples/basque-case/","page":"Basque Country","title":"Basque Country","text":"Data sources used for transport modes, and cost and performance parameters:","category":"page"},{"location":"examples/basque-case/","page":"Basque Country","title":"Basque Country","text":"VoT values are deduced from the publication [1].\nETISplus [2]: Within the project ETISplus, origin-destination data was calibrated at NUTS-3 resolution for all modes and both, passenger and freight transport. The data specifies also trip pruposes.\nGrube et al., 2021 [3]: The authors provide a cost comparison between different kinds of vehicle types of passenger cars and drivetrain technologies.","category":"page"},{"location":"examples/basque-case/","page":"Basque Country","title":"Basque Country","text":"References: [1] Tattini, J., Ramea, K., Gargiulo, M., Yang, C., Mulholland, E., Yeh, S., & Karlsson, K. (2018). Improving the representation of modal choice into bottom-up optimization energy system models – The MoCho-TIMES model. Applied Energy, 212, 265–282. https://doi.org/10.1016/j.apenergy.2017.12.050","category":"page"},{"location":"examples/basque-case/","page":"Basque Country","title":"Basque Country","text":"[2] Szimba, E., Kraft, M., Ihrig, J., Schimke, A., Schnell, O., Kawabata, Y., Newton, S., Breemersch, T., Versteegh, R., Meijeren, J., Jin-Xue, H., de Stasio, C., & Fermi, F. (2012). ETISplus Database Content and Methodology. https://doi.org/10.13140/RG.2.2.16768.25605","category":"page"},{"location":"examples/basque-case/","page":"Basque Country","title":"Basque Country","text":"[3] Grube, T., Kraus, S., Reul, J., & Stolten, D. (2021). Passenger car cost development through 2050. Transportation Research Part D: Transport and Environment, 101, 103110. https://doi.org/10.1016/j.trd.2021.103110","category":"page"},{"location":"examples/basque-case/#Output-data","page":"Basque Country","title":"Output data","text":"","category":"section"},{"location":"manual/output_data/#Output-data","page":"Output data","title":"Output data","text":"","category":"section"},{"location":"manual/output_data/","page":"Output data","title":"Output data","text":"The format of the output is also in YAML.  For each of the decision variables of the model, a seperate output file is generated. In each file, the keys are the touple holding the indices of the value.","category":"page"},{"location":"manual/output_data/","page":"Output data","title":"Output data","text":"The output data is:","category":"page"},{"location":"manual/output_data/","page":"Output data","title":"Output data","text":"f: number of trips covered by the following technology and vehicle type of the generatio (year, (product id, odpair id, path id), mode id, vehicle technology id, generation)) \nh: number of vehicles used to cover the trips for an origin-destination pair (year, odpair id , vehicle technology id, generation)\nh_plus: number of vehicles purchased (year, odpair id , vehicle technology id, generation)\nh_minus: number of vehicles exiting the vehicle stock (year, odpair id , vehicle technology id, generation)\nh_exist: number of vehicles at the start of the year before the h_minus is substracted and h_plus is added \ns: amount of energy fueled (kWh) indexed by (year, (product id, odpair id, path id, generation)\nq_fuel_infr_plus: added infrastructure (kW) to the initial fueling capacities by (year, fuel id, geographic element id)\nq_mode_infr_plus: added infrastructure (pkm/h or Tkm/h) to the initial mode infrastructure capacities by (year, mode id, geographic element id)\nbudget_penalty_plus and budget_penalty_minus: reflects on how much (euro) the budgets of the different consumer groups was exceeded (.._plus) or undercut (.._minus)","category":"page"},{"location":"manual/types_and_functions/#Type-and-functions","page":"Types and functions","title":"Type and functions","text":"","category":"section"},{"location":"manual/types_and_functions/#TransComp.EmissionLimitbymode","page":"Types and functions","title":"TransComp.EmissionLimitbymode","text":"EmissionLimitbymode\n\nAn 'EmissionLimitbymode' describes emissions constrained for a mode.\n\nFields\n\nid::Int: unique identifier of the emission constraint\nmode::Mode: mode of transport\nemission::Float64: emission constraint of the vehicle type (tCO2/year)\nyear::Int: year of the expected emission constraint\n\n\n\n\n\n","category":"type"},{"location":"manual/types_and_functions/#TransComp.EmissionLimitbyyear","page":"Types and functions","title":"TransComp.EmissionLimitbyyear","text":"EmissionLimitbyyear\n\nAn 'EmissionLimitbyyear' describes an emission goal for a specific year for the total emissions.\n\nFields\n\nid::Int: unique identifier of the emission constraint\nemission::Float64: emission constraint\nyear::Int: year of the expected emission constraint\n\n\n\n\n\n","category":"type"},{"location":"manual/types_and_functions/#TransComp.FinancialStatus","page":"Types and functions","title":"TransComp.FinancialStatus","text":"FinancialStatus\n\nA 'FinancialStatus' describes a demographic group based on what there average budget for transportation-related expenses is.\n\nFields\n\nid::Int: unique identifier of the financial status\nname::String: name of the financial status\nVoT: value of time in €/h\nmonetary_budget_purchase: budget for purchasing costs in €/year\nmonetary_budget_purchase_lb: lower bound of the budget for purchasing costs in €/year\nmonetary_budget_purchase_ub: upper bound of the budget for purchasing costs in €/year\nmonetary_budget_purchase_time_horizon: time horizon of the budget for purchasing costs in years, indicating the time period over which the budget is valid\n\n\n\n\n\n","category":"type"},{"location":"manual/types_and_functions/#TransComp.Fuel","page":"Types and functions","title":"TransComp.Fuel","text":"Fuel\n\nA 'Fuel' represents the energy source used for the vehicle propulsion. \n\nFields\n\nid::Int: unique identifier of the fuel\nname::String: name of the fuel\nemission_factor::Float64: emission factor of the fuel in gCO2/kWh\ncost_per_kWh: cost per kWh of the fuel in €\ncost_per_kW: cost per kW of the fuel in €\nfueling_infrastructure_om_costs::Array{Float64,1}: fueling infrastructure operation and maintenance costs in €/year\n\n\n\n\n\n","category":"type"},{"location":"manual/types_and_functions/#TransComp.GeographicElement","page":"Types and functions","title":"TransComp.GeographicElement","text":"GeographicElement\n\nA 'Graph_item' represents a graph item that is either a node or an edge.\n\nFields\n\nid::Int: unique identifier of the graph item\ntype::String: type of the graph item (either 'node' or 'edge')\nname::String: name of the graph item\ncarbon_price::Array{Float64,1}: carbon price in €/tCO2 for each year\nfrom::Node: the node from which the edge starts\nto::Node: the node to which the edge ends\nlength::Float64: length of the connection in km\n\n\n\n\n\n","category":"type"},{"location":"manual/types_and_functions/#TransComp.InitDetourTime","page":"Types and functions","title":"TransComp.InitDetourTime","text":"InitDetourTimes\n\nAn 'InitDetourTimes' represents the detour times that exist at the initial year of the optimization horizon. It is the average detour time to reach a fueling station.\n\nFields\n\nid::Int: unique identifier of the initial detour times\nfuel::Fuel: fuel type of the fueling station\nlocation::GeographicElement: location of the fueling station\ndetour_time::Float64: detour time in h\n\n\n\n\n\n","category":"type"},{"location":"manual/types_and_functions/#TransComp.InitialFuelingInfr","page":"Types and functions","title":"TransComp.InitialFuelingInfr","text":"InitialFuelingInfr\n\nAn 'InitialFuelingInfr' represents the fueling infrastructure that exists at the initial year of the optimization horizon.\n\nFields\n\nid::Int: unique identifier of the initial fueling infrastructure\ntechnology::Technology: technology of the fueling infrastructure\nallocation: allocation of the fueling infrastructure\ninstalled_kW::Float64: installed capacity of the fueling infrastructure in kW\n\n\n\n\n\n","category":"type"},{"location":"manual/types_and_functions/#TransComp.InitialModeInfr","page":"Types and functions","title":"TransComp.InitialModeInfr","text":"InitialModeInfr\n\nAn 'InitialModeInfr' represents the mode infrastructure that exists at the initial year of the optimization horizon.\n\nFields\n\nid::Int: unique identifier of the initial mode infrastructure\nmode::Mode: mode of transport\nallocation: allocation of the mode infrastructure\ninstalled_ukm::Float64: installed transport capacity of the mode infrastructure in Ukm\n\n\n\n\n\n","category":"type"},{"location":"manual/types_and_functions/#TransComp.InitialSupplyInfr","page":"Types and functions","title":"TransComp.InitialSupplyInfr","text":"InitialSupplyInfr\n\nAn 'InitialSupplyInfr' represents the supply infrastructure that exists at the initial year of the optimization horizon.\n\nFields\n\nid::Int: unique identifier of the initial supply infrastructure\nfuel::Fuel: fuel type of the supply infrastructure\nallocation: allocation of the supply infrastructure\ninstalled_kW::Float64: installed capacity of the supply infrastructure in kW\n\n\n\n\n\n","category":"type"},{"location":"manual/types_and_functions/#TransComp.InitialVehicleStock","page":"Types and functions","title":"TransComp.InitialVehicleStock","text":"InitialVehicleStock\n\nAn 'InitialVehicleStock' represents a vehicle fleet that exisits at the initial year of the optimization horizon.\n\nFields\n\nid::Int: unique identifier of the initial vehicle stock\ntechvehicle::TechVehicle: vehicle type and technology of the vehicle\nyear_of_purchase::Int: year in which the vehicle was purchased\nstock::Float64: number of vehicles of this type in the initial vehicle stock\n\n\n\n\n\n","category":"type"},{"location":"manual/types_and_functions/#TransComp.Mode","page":"Types and functions","title":"TransComp.Mode","text":"Mode\n\nA 'Mode' represents a transport mode. Transport modes may differ either by the infrastructure used (for example, road vs. rail) or by the used vehicle type (for example, private passenger car vs. bus) that directly influences the travel time but excludes a differentiation based on technology.\n\nFields\n\nid::Int: unique identifier of the mode\nname::String: name of the mode\nquantify_by_vehs::Bool: if for this mode vehicles stock is sized or not. If this mode is considered with levelized costs, including the costs for vehicles and related costs.\ncost_per_ukm::Array{Float64, 1}: cost per km in €/km (only relevant when quantifybyvehs is false) \nemission_factor::Array{Float64,1}: emission factor of the mode in gCO2/ukm (only relevant when quantifybyvehs is false)\ninfrastructure_expansion_costs::Array{Float64,1}: infrastructure expansion costs in € (only relevant when quantifybyvehs is false)\ninfrastructure_om_costs::Array{Float64,1}: infrastructure operation and maintenance costs in €/year (only relevant when quantifybyvehs is false)\nwaiting_time::Array{Float64,1}: waiting time in h\n\n\n\n\n\n","category":"type"},{"location":"manual/types_and_functions/#TransComp.ModeSharemaxbyyear","page":"Types and functions","title":"TransComp.ModeSharemaxbyyear","text":"ModeSharemaxbyyear\n\nMaximum mode shares of a transport mode in a specific year.\n\nFields\n\nid::Int: unique identifier of the mode share\nmode::Mode: mode of transport\nshare::Float64: maximum share of the mode\nyear::Int: year of the maximum mode share\nregion_type::Array{Regiontype,1}: array of region types that are affected by this TechVehicle share constraint\n\n\n\n\n\n","category":"type"},{"location":"manual/types_and_functions/#TransComp.ModeShareminbyyear","page":"Types and functions","title":"TransComp.ModeShareminbyyear","text":"ModeShareminbyyear\n\nMinimum mode shares of a transport mode in a specific year.\n\nFields\n\nid::Int: unique identifier of the mode share\nmode::Mode: mode of transport\nshare::Float64: minimum share of the mode\nyear::Int: year of the minimum mode share\nregion_type::Array{Regiontype,1}: array of region types that are affected by this TechVehicle share constraint\n\n\n\n\n\n","category":"type"},{"location":"manual/types_and_functions/#TransComp.Odpair","page":"Types and functions","title":"TransComp.Odpair","text":"Odpair\n\nAn 'Odpair' describes transport demand. It may take place between two regions but origin and destination may al so \n\nFields\n\nid::Int: unique identifier of the odpair\norigin::Node: origin of the transport demand\ndestination::Node: destination of the transport demand\npaths::Array{Path, 1}: possible paths between origin and destination\nF: number of trips in p/year or t/year\nproduct::Product: product that is transported\nvehicle_stock_init::Array{InitialVehicleStock,1}: initial vehicle stock\nfinancial_status::FinancialStatus: financial status of the transport demand\nregion_type::Regiontype: region type of the transport demand\ntravel_time_budget::Float64: travel time budget in h/year\n\n\n\n\n\n","category":"type"},{"location":"manual/types_and_functions/#TransComp.Path","page":"Types and functions","title":"TransComp.Path","text":"Path\n\nA 'Path' represents a possible route between two nodes. This sequence includes the nodes that are passed through and the length of the path.\n\nFields\n\nid::Int: unique identifier of the path\nname::String: name of the path\nlength::Float64: length of the path in km\nsequence: sequence of nodes and edges that are passed through\n\n\n\n\n\n","category":"type"},{"location":"manual/types_and_functions/#TransComp.Product","page":"Types and functions","title":"TransComp.Product","text":"Product\n\nA 'Product' represents either a good or a service that is being transported. This may include passengers, or different types of products in the freight transport. The differentiation of transported products related to the different needs for transportation and, therefore, different possible sets of transport modes, vehicle types and drivetrain technologies are available for transport.\n\nFields\n\nid::Int: unique identifier of the product\nname::String: name of the product\n\n\n\n\n\n","category":"type"},{"location":"manual/types_and_functions/#TransComp.Regiontype","page":"Types and functions","title":"TransComp.Regiontype","text":"Regiontype\n\nA 'Regiontype' describes a region based on its characteristics that induces differences in transportation needs (for example, urban vs. rural area).\n\nFields\n\nid::Int: unique identifier of the regiontype\nname::String: name of the regiontype\nspeed::Float64: average speed in km/h\ncosts_var::Array{Float64, 1}: variable costs in €/vehicle-km\ncosts_fix::Array{Float64, 1}: fixed costs in €/year\n\n\n\n\n\n","category":"type"},{"location":"manual/types_and_functions/#TransComp.SupplyType","page":"Types and functions","title":"TransComp.SupplyType","text":"SupplyType\n\nA 'SupplyType' represents the type of supply infrastructure that is used for fueling vehicles.\n\nFields\n\nid::Int: unique identifier of the supply type\nname::String: name of the supply type\nfuel::Fuel: fuel type of the supply infrastructure\ninstall_costs::Array{Float64}: installation costs in €\nom_costs::Array{Float64}: operation and maintenance costs in €/year\n\n\n\n\n\n","category":"type"},{"location":"manual/types_and_functions/#TransComp.TechVehicle","page":"Types and functions","title":"TransComp.TechVehicle","text":"TechVehicle\n\nA 'TechVehicle' represents a vehicle that is used for transportation. This includes the vehicle type, the technology used in the vehicle, the capital and maintenance costs, the load capacity, the specific consumption, the lifetime, the annual range, the number of vehicles of this type, the battery capacity, and the peak charging power.\n\nFields\n\nid::Int: unique identifier of the vehicle\nname::String: name of the vehicle\nvehicle_type::Vehicletype: type of the vehicle\ntechnology::Technology: technology used in the vehicle\ncapital_cost::Array{Float64}: capital cost in €\nmaintenance_cost_annual::Array{Array{Float64,1},1}: annual maintenance cost in €/year\nmaintenance_cost_distance::Array{Array{Float64,1},1}: maintenance cost per km in €/km   \nW::Array{Float64}: load capacity in t\nspec_cons::Array{Float64}: specific consumption in kWh/km\nLifetime::Array{Int}: lifetime of the vehicle in years\nAnnualRange::Array{Float64}: annual range in km\nproducts::Array{Product}: number of vehicles of this type\ntank_capacity::Array{Float64}: battery capacity in kWh\npeak_fueling::Array{Float64}: peak charging power in kW\nfueling_time´::Array{Float64}: refueling time in h (total tank) - array with values by generation\n\n\n\n\n\n","category":"type"},{"location":"manual/types_and_functions/#TransComp.Technology","page":"Types and functions","title":"TransComp.Technology","text":"Technology\n\nA 'Technology' represents the drivetrain technology used in the vehicle.\n\nFields\n\nid::Int: unique identifier of the technology\nname::String: name of the technology\nfuel::Fuel: fuel used by the technology\n\n\n\n\n\n","category":"type"},{"location":"manual/types_and_functions/#TransComp.VehicleSubsidy","page":"Types and functions","title":"TransComp.VehicleSubsidy","text":"VehicleSubsidy\n\nA 'VehicleSubsidy' describes the subsidy for a vehicle type in a specific year.\n\nFields\n\nid::Int: unique identifier of the subsidy\nname::String: name of the subsidy\nyears::Array{Int,1}: years in which the subsidy is valid\ntechvehicle::TechVehicle: vehicle type and technology\nsubsidy::Float64: subsidy in €\n\n\n\n\n\n","category":"type"},{"location":"manual/types_and_functions/#TransComp.Vehicletype","page":"Types and functions","title":"TransComp.Vehicletype","text":"Vehicletype\n\nA 'Vehicletype' represents a type of vehicle that is used for transportation. This may be for example, small passenger cars, buses, or light-duty trucks.\n\nFields\n\nid::Int: unique identifier of the vehicle type\nname::String: name of the vehicle type\nmode::Mode: mode of transport that the vehicle type is used for\nproduct::Product: product that the vehicle type is used for\n\n\n\n\n\n","category":"type"},{"location":"manual/types_and_functions/#TransComp.base_define_variables-Tuple{JuMP.Model, Dict}","page":"Types and functions","title":"TransComp.base_define_variables","text":"base_define_variables(model::Model, data_structures::Dict)\n\nDefines the variables for the model.\n\nArguments\n\nmodel::Model: JuMP model\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.check_correct_format_Fuel-Tuple{Dict, Int64}","page":"Types and functions","title":"TransComp.check_correct_format_Fuel","text":"check_correct_format_Fuel(data_structures::Dict, years)\n\nCheck if the format of the Fuel entries is correct.\n\nArguments\n\ndata_structures::Dict: The input data.\nyears::Int: The number of years in the optimization horizon.\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.check_correct_format_InitialModeInfr-Tuple{Dict}","page":"Types and functions","title":"TransComp.check_correct_format_InitialModeInfr","text":"check_correct_format_InitialModeInfr(data_structures::Dict)\n\nCheck if the format of the InitialModeInfr entries is correct.\n\nArguments\n\ndata_structures::Dict: The input data.\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.check_correct_format_Mode-Tuple{Dict, Any}","page":"Types and functions","title":"TransComp.check_correct_format_Mode","text":"check_correct_format_Mode(data_structures::Dict, years)\n\nCheck if the format of the Mode entries is correct.\n\nArguments\n\ndata_structures::Dict: The input data.\nyears::Int: The number of years in the optimization horizon.\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.check_correct_format_Odpair-Tuple{Dict, Int64}","page":"Types and functions","title":"TransComp.check_correct_format_Odpair","text":"check_correct_format_Odpair(data_structures::Dict)\n\nCheck if the format of the Odpair entries is correct.\n\nArguments\n\ndata_structures::Dict: The input data.\nyears::Int: The number of years in the optimization horizon.\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.check_correct_format_Path-Tuple{Dict}","page":"Types and functions","title":"TransComp.check_correct_format_Path","text":"check_correct_format_Path(data_structures::Dict)\n\nCheck if the format of the Path entries is correct.\n\nArguments\n\ndata_structures::Dict: The input data.\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.check_correct_format_Product-Tuple{Dict}","page":"Types and functions","title":"TransComp.check_correct_format_Product","text":"check_correct_format_Product(data_structures::Dict, years)\n\nCheck if the format of the Product entries is correct.\n\nArguments\n\ndata_structures::Dict: The input data.\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.check_correct_format_Speed-Tuple{Dict}","page":"Types and functions","title":"TransComp.check_correct_format_Speed","text":"check_correct_format_Speed(data_structures::Dict)\n\nCheck if the format of the Speed entries is correct.\n\nArguments\n\ndata_structures::Dict: The input data.\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.check_correct_format_Technology-Tuple{Dict}","page":"Types and functions","title":"TransComp.check_correct_format_Technology","text":"check_correct_format_Technology(data_structures::Dict, years)\n\nCheck if the format of the Technology entries is correct.\n\nArguments\n\ndata_structures::Dict: The input data.\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.check_correct_formats_FinancialStatus-Tuple{Dict}","page":"Types and functions","title":"TransComp.check_correct_formats_FinancialStatus","text":"check_correct_formats_FinancialStatus(data_structures::Dict, years)\n\nCheck if the format of the FinancialStatus entries is correct.\n\nArguments\n\ndata_structures::Dict: The input data.\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.check_correct_formats_GeographicElement-Tuple{Dict, Any}","page":"Types and functions","title":"TransComp.check_correct_formats_GeographicElement","text":"check_correct_formats_GeographicElement(data_structures::Dict, years)\n\nCheck if the format of the GeographicElement entries is correct.\n\nArguments\n\ndata_structures::Dict: The input data.\nyears::Int: The number of years in the optimization horizon.\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.check_folder_writable-Tuple{String}","page":"Types and functions","title":"TransComp.check_folder_writable","text":"check_folder_writable(folder_path::String)\n\nCheck if the folder exists and can be written in.\n\nArguments\n\nfolder_path::String: The path to the folder.\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.check_input_file-Tuple{String}","page":"Types and functions","title":"TransComp.check_input_file","text":"check_input_file(path_to_source_file::String)\n\nCheck if the input file exists and is a YAML file.\n\nArguments\n\npath_to_source_file::String: The path to the input file.\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.check_model_parametrization-Tuple{Dict, Vector{String}}","page":"Types and functions","title":"TransComp.check_model_parametrization","text":"check_model_parametrization(data_dict::Dict, required_keys::Vector{String})\n\nCheck if the required keys are present in the model data.\n\nArguments\n\ndata_dict::Dict: The input data.\n\nReturns\n\nBool: True if the required keys are present, false otherwise.\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.check_required_keys-Tuple{Dict, Vector{String}}","page":"Types and functions","title":"TransComp.check_required_keys","text":"check_required_keys(data_dict::Dict, required_keys::Vector{String})\n\nCheck if the required keys are present in the input data.\n\nArguments\n\ndata_dict::Dict: The input data.\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.check_required_sub_keys-Tuple{Dict, Vector{String}, String}","page":"Types and functions","title":"TransComp.check_required_sub_keys","text":"check_required_sub_keys(data_dict::Dict, required_keys::Vector{String}, parent_key::String)\n\nCheck if the keys are defined for a parent key in the input data.\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.check_uniquness_of_ids-Tuple{Dict, Any}","page":"Types and functions","title":"TransComp.check_uniquness_of_ids","text":"check_uniquness_of_ids(data_structures::Dict, required_keys::Vector{String})\n\nChecks if all \"id\" entries in a list of dictionaries are unique.\n\nArguments\n\ndata_structures::Dict: The input data.\nrequired_keys::Vector{String}: The keys to check for uniqueness.\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.constraint_demand_coverage-Tuple{JuMP.Model, Any}","page":"Types and functions","title":"TransComp.constraint_demand_coverage","text":"constraint_demand_coverage(model::JuMP.Model, data_structures::Dict)\n\nCreates constraint for demand coverage.\n\nArguments\n\nmodel::JuMP.Model: JuMP model\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.constraint_emissions_by_mode-Tuple{JuMP.Model, Dict}","page":"Types and functions","title":"TransComp.constraint_emissions_by_mode","text":"constraint_emissions_by_mode(model::JuMP.Model, data_structures::Dict)\n\nEmissions given per mode for a specific year. Attention: This constraint may be a source for infeasibility if mode or technology shift cannot be achieved due to restrictions in the shift of modes (see parametrization of parameters alphaf and betaf), or due to the lifetimes of technologies as well as the lack of available low emission or zero emission technologies.\n\nArguments\n\nmodel::JuMP.Model: JuMP model\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.constraint_fueling_demand-Tuple{JuMP.Model, Dict}","page":"Types and functions","title":"TransComp.constraint_fueling_demand","text":"constraint_fueling_demand(model::JuMP.Model, data_structures::Dict)\n\nConstraints for fueling demand at nodes and edges.\n\nArguments\n\nmodel::JuMP.Model: JuMP model\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.constraint_fueling_infrastructure-Tuple{JuMP.Model, Dict}","page":"Types and functions","title":"TransComp.constraint_fueling_infrastructure","text":"constraint_vehicle_purchase(model::JuMP.Model, data_structures::Dict)\n\nConstraints for the sizing of fueling infrastructure at nodes and edges.\n\nArguments\n\nmodel::JuMP.Model: JuMP model\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.constraint_market_share-Tuple{JuMP.Model, Dict}","page":"Types and functions","title":"TransComp.constraint_market_share","text":"constraint_market_share(model::JuMP.Model, data_structures::Dict)\n\nIf share are given for specific vehicle types, this function will create constraints for the newly bought vehicle share of vehicles the modes.\n\nArguments\n\nmodel::JuMP.Model: JuMP model\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.constraint_max_mode_share-Tuple{JuMP.Model, Dict}","page":"Types and functions","title":"TransComp.constraint_max_mode_share","text":"constraint_max_mode_share(model::JuMP.Model, data_structures::Dict)\n\nIf share are given for specific modes, this function will create constraints for the share of the modes. When this constraint is active, it can be a source of infeasibility for the model as it may be not possible to reach certain mode shares due to restrictions in the shift of modes (see parametrization of parameters alphaf and betaf). Or when multiple constraints for the mode share are active.\n\nArguments\n\nmodel::JuMP.Model: JuMP model\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.constraint_min_mode_share-Tuple{JuMP.Model, Dict}","page":"Types and functions","title":"TransComp.constraint_min_mode_share","text":"constraint_min_mode_share(model::JuMP.Model, data_structures::Dict)\n\nIf share are given for specific modes, this function will create constraints for the share of the modes. When this constraint is active, it can be a source of infeasibility for the model as it may be not possible to reach certain mode shares due to restrictions in the shift of modes (see parametrization of parameters alphaf and betaf). Or when multiple constraints for the mode share are active.\n\nArguments\n\nmodel::JuMP.Model: JuMP model\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.constraint_mode_infrastructure-Tuple{JuMP.Model, Dict}","page":"Types and functions","title":"TransComp.constraint_mode_infrastructure","text":"constraintmodeinfrastructure(model::JuMP.Model, data_structures::Dict)\n\nConstraints for sizing of mode infrastructure at nodes and edges.\n\nArguments\n\nmodel::JuMP.Model: JuMP model\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.constraint_mode_share-Tuple{JuMP.Model, Dict}","page":"Types and functions","title":"TransComp.constraint_mode_share","text":"constraint_mode_share(model::JuMP.Model, data_structures::Dict)\n\nIf share are given for specific modes, this function will create constraints for the share of the modes. When this constraint is active, it can be a source of infeasibility for the model as it may be not possible to reach certain mode shares due to restrictions in the shift of modes (see parametrization of parameters alphaf and betaf). Especially also when constraints for minimum/maximum mode shares are active.\n\nArguments\n\nmodel::JuMP.Model: JuMP model\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.constraint_mode_shift-Tuple{JuMP.Model, Dict}","page":"Types and functions","title":"TransComp.constraint_mode_shift","text":"constraint_mode_shift(model::JuMP.Model, data_structures::Dict)\n\nConstraints for the rate of the mode shfit.\n\nArguments\n\nmodel::JuMP.Model: JuMP model\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.constraint_monetary_budget-Tuple{JuMP.Model, Dict}","page":"Types and functions","title":"TransComp.constraint_monetary_budget","text":"constraint_vehicle_purchase(model::JuMP.Model, data_structures::Dict)\n\nCreates constraints for monetary budget for vehicle purchase by route.\n\nArguments\n\nmodel::JuMP.Model: JuMP model\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.constraint_vehicle_aging-Tuple{JuMP.Model, Dict}","page":"Types and functions","title":"TransComp.constraint_vehicle_aging","text":"constraint_vehicle_aging(model::JuMP.Model, data_structures::Dict)\n\nCreates constraints for vehicle aging.\n\nArguments\n\nmodel::JuMP.Model: JuMP model\ndata_structures::Dict: dictionary with the input data\n\nReturns\n\nmodel::JuMP.Model: JuMP model with the constraints added\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.constraint_vehicle_sizing-Tuple{JuMP.Model, Dict}","page":"Types and functions","title":"TransComp.constraint_vehicle_sizing","text":"constraint_vehicle_sizing(model::JuMP.Model, data_structures::Dict)\n\nCreates constraint for vehicle sizing.\n\nArguments\n\nmodel::JuMP.Model: JuMP model\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.constraint_vehicle_stock_shift-Tuple{JuMP.Model, Dict}","page":"Types and functions","title":"TransComp.constraint_vehicle_stock_shift","text":"constraint_vehicle_stock_shift(model::JuMP.Model, data_structures::Dict)\n\nConstraints for vehicle stock turnover.\n\nArguments\n\nmodel::JuMP.Model: JuMP model\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.create_emission_price_along_path-Tuple{Path, Int64, Dict}","page":"Types and functions","title":"TransComp.create_emission_price_along_path","text":"create_emission_price_along_path(k::Path, y::Int64, data_structures::Dict)\n\nCalculating the carbon price along a given route based on the regions that the path lies in. (currently simple calculation by averaging over all geometric items among the path).\n\nArguments\n\nk::Path: path\ndata_structures::Dict: dictionary with the input data \n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.create_m_tv_pairs-Tuple{Vector{TechVehicle}, Vector{Mode}}","page":"Types and functions","title":"TransComp.create_m_tv_pairs","text":"create_m_tv_pairs(techvehicle_list::Vector{TechVehicle}, mode_list::Vector{Mode})\n\nCreates a set of pairs of mode and techvehicle IDs.\n\nArguments\n\ntechvehicle_list::Vector{TechVehicle}: list of techvehicles\nmode_list::Vector{Mode}: list of modes\n\nReturns\n\nmtvpairs::Set: set of pairs of mode and techvehicle IDs\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.create_model-Tuple{Any, String, Any}","page":"Types and functions","title":"TransComp.create_model","text":"create_model(model::JuMP.Model, data_structures::Dict)\n\nDefinition of JuMP.model and adding of variables.\n\nArguments\n\nmodel::JuMP.Model: JuMP model\ndata_structures::Dict: dictionary with the input data and parsing of the input parameters\n\nReturns\n\nmodel::JuMP.Model: JuMP model with the variables added\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.create_p_r_k_e_set-Tuple{Vector{Odpair}}","page":"Types and functions","title":"TransComp.create_p_r_k_e_set","text":"create_p_r_k_e_set(odpairs::Vector{Odpair})\n\nCreates a set of pairs of product, odpair, path, and element IDs.\n\nArguments\n\nodpairs::Vector{Odpair}: list of odpairs\n\nReturns\n\nprkepairs::Set: set of pairs of product, odpair, path, and element IDs\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.create_p_r_k_g_set-Tuple{Vector{Odpair}}","page":"Types and functions","title":"TransComp.create_p_r_k_g_set","text":"create_p_r_k_g_set(odpairs::Vector{Odpair})\n\nCreates a set of pairs of product, odpair, path, and element IDs.\n\nArguments\n\nodpairs::Vector{Odpair}: list of odpairs\n\nReturns\n\nprkgpairs::Set: set of pairs of product, odpair, path, and element IDs\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.create_p_r_k_n_set-Tuple{Vector{Odpair}}","page":"Types and functions","title":"TransComp.create_p_r_k_n_set","text":"create_p_r_k_n_set(odpairs::Vector{Odpair})\n\nCreates a set of pairs of product, odpair, path, and element IDs.\n\nArguments\n\nodpairs::Vector{Odpair}: list of odpairs\n\nReturns\n\nprknpairs::Set: set of pairs of product, odpair, path, and element IDs\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.create_p_r_k_set-Tuple{Vector{Odpair}}","page":"Types and functions","title":"TransComp.create_p_r_k_set","text":"create_p_r_k_set(odpairs::Vector{Odpair})\n\nCreates a set of pairs of product, odpair, and path IDs.\n\nArguments\n\nodpairs::Vector{Odpair}: list of odpairs\n\nReturns\n\nprk_pairs::Set: set of pairs of product, odpair, and path IDs\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.create_r_k_set-Tuple{Vector{Odpair}}","page":"Types and functions","title":"TransComp.create_r_k_set","text":"create_r_k_set(odpairs::Vector{Odpair})\n\nCreates a set of pairs of odpair and path IDs.\n\nArguments\n\nodpairs::Vector{Odpair}: list of odpairs\n\nReturns\n\nrkpairs::Set: set of pairs of odpair and path IDs\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.create_tv_id_set-Tuple{Vector{TechVehicle}, Vector{Mode}}","page":"Types and functions","title":"TransComp.create_tv_id_set","text":"create_tv_id_set(techvehicle_list::Vector{TechVehicle}, mode_list::Vector{Mode})\n\nCreates a list of techvehicle IDs.\n\nArguments\n\ntechvehicle_list::Vector{TechVehicle}: list of techvehicles\nmode_list::Vector{Mode}: list of modes\n\nReturns\n\ntechvehicleids2::Set: set of techvehicle IDs\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.create_v_t_set-Tuple{Vector{TechVehicle}}","page":"Types and functions","title":"TransComp.create_v_t_set","text":"create_v_t_set(techvehicle_list::Vector{TechVehicle})\n\nCreates a set of pairs of techvehicle IDs.\n\nArguments\n\ntechvehicle_list::Vector{TechVehicle}: list of techvehicles\n\nReturns\n\ntvpairs::Set: set of pairs of techvehicle IDs\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.generate_exact_length_subsets-Tuple{Int64, Int64, Int64}","page":"Types and functions","title":"TransComp.generate_exact_length_subsets","text":"generate_exact_length_subsets(start_year::Int, end_year::Int, delta_y::Int)\n\nGenerates a list of subsets of years with a fixed length.\n\nArguments\n\nstart_year::Int: The first year.\nend_year::Int: The last year.\ndelta_y::Int: The length of the subsets.\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.get_input_data-Tuple{String}","page":"Types and functions","title":"TransComp.get_input_data","text":"get_input_data(path_to_source_file::String)\n\nThis function reads the input data and checks requirements for the content of the file.\n\nArguments\n\npathtosource_file::String: path to the source file\n\nReturns\n\ndata_dict::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.objective-Tuple{JuMP.Model, Dict}","page":"Types and functions","title":"TransComp.objective","text":"objective(model::Model, data_structures::Dict)\n\nDefinition of the objective function for the optimization model.\n\nArguments\n\nmodel::Model: JuMP model\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.parse_data-Tuple{Dict}","page":"Types and functions","title":"TransComp.parse_data","text":"parse_data(data_dict::Dict)\n\nParses the input data into the corresponding parameters in struct format from structs.jl.\n\nArguments\n\ndata_dict::Dict: dictionary with the input data\n\nReturns\n\ndata_structures::Dict: dictionary with the parsed data\n\n\n\n\n\n","category":"method"},{"location":"manual/types_and_functions/#TransComp.save_results","page":"Types and functions","title":"TransComp.save_results","text":"save_results(model::Model, case_name::String)\n\nSaves the results of the optimization model to YAML files.\n\nArguments\n\nmodel::Model: JuMP model\ncase_name::String: name of the case\nfileforresults::String: name of the file to save the results\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"function"},{"location":"manual/input_data/#Input-data","page":"Preparation of input data","title":"Input data","text":"","category":"section"},{"location":"manual/input_data/","page":"Preparation of input data","title":"Preparation of input data","text":"The input file is defined as one YAML.","category":"page"},{"location":"manual/input_data/","page":"Preparation of input data","title":"Preparation of input data","text":"Model:\n  y_init: 2020          # first year of model horizon\n  Y: 31                 # number of modeled years\n  pre_y: 25             # number of years before y_init to be considered for generation of the vehicle stock\n  gamma: 0.001          # factor for sizing infrastructure (ratio between total yearly demand and peak demand)\n  alpha_f: 0.1          # parameter for constraining rate of mode shift (optional) | default: 0.1\n  beta_f: 0.1           # parameter for constraining rate of mode shift (optional) | default: 0.1\n  alpha_h: 0.1          # parameter for constraining rate of technology shift (optional) | default: 0.1\n  beta_h: 0.1           # parameter for constraining rate of technology shift (optional) | default: 0.1","category":"page"},{"location":"manual/input_data/","page":"Preparation of input data","title":"Preparation of input data","text":"For each key in this file, there is a list of input elements for this specific attribute which correspond to defined data structures in the model. ","category":"page"},{"location":"manual/input_data/","page":"Preparation of input data","title":"Preparation of input data","text":"In this sample file, the optimization is performed for the years 2020 until 2050 with 31 time steps in total. If a stock of vehicles is explicitly considered, pre_y indicates the earliest generation of vehicles considered. In this case, the oldest vehicles that are considered have been introduced to the vehicle stock in 1996 as this was chosen as the maximum lifetime here. ","category":"page"},{"location":"manual/input_data/","page":"Preparation of input data","title":"Preparation of input data","text":"For further explanation of variables alpha_f, beta_f,alpha_h, beta_h and gamma, please refer to the mathematical formulation of the model.","category":"page"},{"location":"manual/input_data/","page":"Preparation of input data","title":"Preparation of input data","text":"Other entries of the input file must include data inputs for the following data structures as keys in the input file:","category":"page"},{"location":"manual/input_data/","page":"Preparation of input data","title":"Preparation of input data","text":"GeographicElement: This includes nodes and connections between the nodes. For connections, it is important to define the fields from, to and length. carbon_price is a list of the length Y defining the location-dependent carbon price. \nMode defines the set of mode types - this may be, for example, road, public transport, bike, or, a more specific, train. \nProduct is the set of different product types that is considered, for which different types of vehicles are needed. This can include different types of freight goods, passengers etc. \nPath: Paths are sequences or geographic elements in the considered case study. A key parameter for this is their length.\nFuel: This introduces all considered fuel types with corresponding emission factor, energy specific costs, costs investments and O&M costs for fueling infrastructure. The word fuel is used here to specify the energy source that powers the vehicles, and, therefore, also includes electricity. \nTechnology is the drive-train technology, for which a fuel is defined.\nVehicletype may include f.e. midi-truck, passenger SUV. Here, the mode for which the vehicle is used must be specified, as weel as, the product that is used for. \nTechVehicle defines a set of combinations of vehicle types and drive-train technologies. Here, all the costs parameters related to this are defined along with technical specifics on the lifetime, load factor, annual range, tank capacity, maximum fueling power and fueling time are specified for each generation.\nInitialVehicleStock is a list defining the existing vehicle stock at the beginning of the optimization horizon along with their current age. The oldest vehicles considered must have the maximum age of pre_y.\nInitialFuelingInfr defines fueling capacities of the exisiting infrastructure per fuel.\nInitialModeInfr defines the same for mode infrastructure.\nFinancialStatus: To consider groups of different income levels, we define here the monetary budget of transport service consumers and their specific value of time (VoT).\nRegiontype is for defining differently build environments within the considered regions, f.e. urban, rural, suburban. This is for introducing region-type-specific parameters such as costs (f.e. related to parking fees) and different travel speed.\nOdpair: This defines all origin-destination pairs with corresponding trips number which defines the travel demand. Within this, the origin and destination of these trips are defined among with a list of different possible paths that can be travel between the origin and destination. Further, it must include the product that is transported, the consumer group by financial status, the region type and travel time budget.","category":"page"},{"location":"manual/input_data/","page":"Preparation of input data","title":"Preparation of input data","text":"Specifations for this are in manual/types.md. Each value must be defined in each item of a list for a key.","category":"page"},{"location":"manual/input_data/","page":"Preparation of input data","title":"Preparation of input data","text":"For each of these data types, a list with is added - as in the upcoming ","category":"page"},{"location":"manual/input_data/","page":"Preparation of input data","title":"Preparation of input data","text":"Mode:\n- id: 1\n  name: road-car\n  quantify_by_vehs: true\n- id: 2\n  name: public_transport\n  quantify_by_vehs: false","category":"page"},{"location":"manual/input_data/","page":"Preparation of input data","title":"Preparation of input data","text":"Here, two travel modes are specified. The first one is modeled based on its vehicle stock. See the example for further an example on this. ","category":"page"},{"location":"manual/how-to-use/#How-to-use?","page":"How to use","title":"How to use?","text":"","category":"section"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"In the following, we describe the purposeful usage of the model.","category":"page"},{"location":"manual/how-to-use/#Preliminary-knowledge-for-usage","page":"How to use","title":"Preliminary knowledge for usage","text":"","category":"section"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"Given the complex nature of transport systems that is highly variable in different spatial environments and geography, the user should have some experience with the formulation and application of optimization models. In preparation to the application, we urge to familiarize yourself with the content of the Model design chapter. A mathematical formulation of the model can be found in the repository in mathematical_formulation-equations/math_formulation.pdf.","category":"page"},{"location":"manual/how-to-use/#Design-of-a-case-study","page":"How to use","title":"Design of a case study","text":"","category":"section"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"In designing and quantifying a case study for the transport component model, the following questions need to be addressed:","category":"page"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"What region is modeled and at which geographic resolution? The model has been previously applied at NUTS-2 and NUTS-3 level (more information on NUTS classification here).\nWhat temporal horizon is modelled? The suggested modeling horizon is at least five years to find implications for modal and technological shift.\nWhich transport modes, drivetrain technologies and fuels are part of the analysis? \nHow granular are the modes modeled? Based on vehicle stock investments or using levelized costs representing the total costs of a mode? This decision depends on the desired granularity of the analysis as well as available data.","category":"page"},{"location":"manual/how-to-use/#Preparing-input-data","page":"How to use","title":"Preparing input data","text":"","category":"section"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"The input data is in YAML format. The minimal required input data and its format is defined in Input data. This is read using get_input_data and the data is checked and parsed using parse_data. ","category":"page"},{"location":"manual/how-to-use/#Model-application","page":"How to use","title":"Model application","text":"","category":"section"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"The case study complexity may vary depending on which constraints are applied to the model.","category":"page"},{"location":"manual/how-to-use/#Minimum-viable-case-Demand-coverage","page":"How to use","title":"Minimum viable case - Demand coverage","text":"","category":"section"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"Applied functions:","category":"page"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"create_model\nconstraint_demand_coverage \nobjective","category":"page"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"Output: Cost-optimal coverage of travel demand by year, odpair, mode, vehicle technology, generation and paths.","category":"page"},{"location":"manual/how-to-use/#Vehicle-stock-sizing","page":"How to use","title":"Vehicle stock sizing","text":"","category":"section"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"Applied functions:","category":"page"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"create_model\nconstraint_demand_coverage \nconstraint_vehicle_sizing\nobjective","category":"page"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"Output: Cost-optimal coverage of travel demand with sizing of required vehicle stock.","category":"page"},{"location":"manual/how-to-use/#Vehicle-stock-aging","page":"How to use","title":"Vehicle stock aging","text":"","category":"section"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"Applied functions:","category":"page"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"create_model\nconstraint_demand_coverage \nconstraint_vehicle_sizing\nconstraint_vehicle_aging\nobjective","category":"page"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"Output: Cost-optimal coverage of travel demand with sizing of required vehicle stock under the consideration of the age structure of the vehicles","category":"page"},{"location":"manual/how-to-use/#Constrained-technology-shift","page":"How to use","title":"Constrained technology shift","text":"","category":"section"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"Applied functions:","category":"page"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"create_model\nconstraint_demand_coverage \nconstraint_vehicle_sizing\nconstraint_vehicle_aging\nconstraint_vehicle_stock_shift\nobjective","category":"page"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"Output: Cost-optimal coverage of travel demand with sizing of required vehicle stock under the consideration of the age structure of the vehicles and limitations on the speed of vehicle stock shift","category":"page"},{"location":"manual/how-to-use/#Fueling-infrastructure-sizing","page":"How to use","title":"Fueling infrastructure sizing","text":"","category":"section"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"Applied functions:","category":"page"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"create_model\nconstraint_demand_coverage \nconstraint_vehicle_sizing\nconstraint_fueling_demand\nobjective","category":"page"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"Output: Cost-optimal coverage of travel demand with sizing of required vehicle stock and expansion of fueling infrastructure","category":"page"},{"location":"manual/how-to-use/#Constrained-mode-shift","page":"How to use","title":"Constrained mode shift","text":"","category":"section"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"Applied functions:","category":"page"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"create_model\nconstraint_demand_coverage \nconstraint_vehicle_sizing\nconstraint_mode_shift\nobjective","category":"page"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"Output: Cost-optimal coverage of travel demand with sizing of required vehicle stock and constrained mode shift","category":"page"},{"location":"manual/how-to-use/#Mode-infrastructure-sizing","page":"How to use","title":"Mode infrastructure sizing","text":"","category":"section"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"Applied functions:","category":"page"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"create_model\nconstraint_demand_coverage \nconstraint_mode_shift\nobjective","category":"page"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"Output: Cost-optimal coverage of travel demand under limitation of speed of shift","category":"page"},{"location":"manual/how-to-use/","page":"How to use","title":"How to use","text":"Save your results with save_results. ","category":"page"},{"location":"manual/math_formulation/#Mathematical-equation","page":"Mathematical model","title":"Mathematical equation","text":"","category":"section"},{"location":"manual/math_formulation/","page":"Mathematical model","title":"Mathematical model","text":"In the following, the mathematical description of the optimization model is explained, elaborating on all relevant functionalities.","category":"page"},{"location":"manual/math_formulation/#Nomenclature","page":"Mathematical model","title":"Nomenclature","text":"","category":"section"},{"location":"manual/math_formulation/#Table:-Sets,-decision-variables-and-parameters","page":"Mathematical model","title":"Table: Sets, decision variables and parameters","text":"","category":"section"},{"location":"manual/math_formulation/","page":"Mathematical model","title":"Mathematical model","text":"Notation Description Unit\ny in mathcalY year \np in mathcalM product type (incl. passengers) \nm in mathcalM mode \nr in mathcalR O-D pair \nk in mathcalK route \nv in mathcalV vehicle type \nt in mathcalT drive-train technology - fuel pair \nl in mathcalL_t fuel supply options for technology t \ne in mathcalE location \nic in mathcalIC income class \nb in mathcalB_kmtg subset for each route k and technology t for year y \ng in mathcalG generation of vehicle fleet \nmathcalV_k (e_1 e_2 e_3 dots e_I) \nmathcalU_k (i e_i) mid e_i in mathcalV_k 1 leq i leq I  \nmathcalY_y 0 dots y \nmathcalE_kmtgb subset of edges within the driving range of technology t in year y along route k ","category":"page"},{"location":"manual/math_formulation/#Decision-variables","page":"Mathematical model","title":"Decision variables","text":"","category":"section"},{"location":"manual/math_formulation/","page":"Mathematical model","title":"Mathematical model","text":"Notation Description Unit\nf_yprkmvtg transport volumes using tech t on mode m, route k in year y T\nh_yprmtg vehicle fleet for mode m with technology t #\nh^+_yprmtg vehicle fleet growth for mode m with technology t #\nh^-_yprmtg vehicle fleet reduction for mode m with technology t #\nh^exist_yprmtg vehicle fleet existing at start of year y #\ns_ypkmvtle fueling demand during peak hour at edge e for tech t via supply option l, route k in year y kWh\ns_ypkmtln fueling demand during peak hour at node n for tech t via supply option l, route k in year y kWh\nq^+ mode_infr_yet installed mode infrastructure for tech t on edge e in year y kW\nq^+ fuel_infr_yet installed fueling infrastructure for tech t on edge e in year y kW\nq^+ supply_infr_yle capacity of supply infrastructure l on edge e in year y kW","category":"page"},{"location":"manual/math_formulation/#Parameters","page":"Mathematical model","title":"Parameters","text":"","category":"section"},{"location":"manual/math_formulation/","page":"Mathematical model","title":"Mathematical model","text":"Notation Description Unit\nLoS_yktv level of service h\nF_yrp transport demand between O-D pair r for product p in year y T\nD^spec_yvtg specific energy consumption of tech t in year y kWh/km\nW_yvtg average load of a vehicle of tech t bought in year g T\nL^a_gmvt max annual mileage of vehicle km\nL_k length of path k km","category":"page"},{"location":"manual/math_formulation/#Objective-function","page":"Mathematical model","title":"Objective function","text":"","category":"section"},{"location":"manual/math_formulation/","page":"Mathematical model","title":"Mathematical model","text":"minimize_x textscZ","category":"page"},{"location":"#TransComp-Documentation","page":"Home","title":"TransComp Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Welcome to the documentation for the TransComp package. This package provides tools for transportation modeling and optimization.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The Transcomp model is a linear optimization model developed within the EU Horizon project iDesignRES in workpage 1. It is implemented in Julia and is based on the JuMP package. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"The Transcomp model is aimed at modeling developments in subsectors of the transport sector. It is designed in a way that it can be adoptable in its complexity in the representation of the transport sector - being flexible in its ability to adjust in to the level of availibility of granular data - and being costumizable in the scope if representation of the the transport sector, i.e. included transport segments. Further, features are provided that allow the soft linking to traditional transport models and energy system models.","category":"page"},{"location":"manual/quick-start/#Quick-start","page":"Quick Start","title":"Quick start","text":"","category":"section"},{"location":"manual/quick-start/","page":"Quick Start","title":"Quick Start","text":"In the following, you will find an explanation of how get the TransComp model to run.","category":"page"},{"location":"manual/quick-start/#Prequisits","page":"Quick Start","title":"Prequisits","text":"","category":"section"},{"location":"manual/quick-start/","page":"Quick Start","title":"Quick Start","text":"Make sure you have Julia installed and a suitable solver for optimization problem (for example, Gurobi).","category":"page"},{"location":"manual/quick-start/","page":"Quick Start","title":"Quick Start","text":"Clone the repository. and ","category":"page"},{"location":"manual/quick-start/","page":"Quick Start","title":"Quick Start","text":"add TransComp","category":"page"}]
}
