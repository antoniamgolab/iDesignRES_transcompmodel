var documenterSearchIndex = {"docs":
[{"location":"Model design/opt_var/#Mathematical-description","page":"Mathematical description","title":"Mathematical description","text":"","category":"section"},{"location":"Example/example/#Example-for-application","page":"Example for application","title":"Example for application","text":"","category":"section"},{"location":"Example/example/#Case-study-description","page":"Example for application","title":"Case study description","text":"","category":"section"},{"location":"Example/example/","page":"Example for application","title":"Example for application","text":"The scope of the example is the modeling of the decarbonization of private motorized passenger transport by car in the Basque country. This Spanish federal state consists of three NUTS-3 level regions which correspond to the geographic resolution of this present example. ","category":"page"},{"location":"Model design/about_the_model/#About-the-model","page":"About the model","title":"About the model","text":"","category":"section"},{"location":"Model design/about_the_model/","page":"About the model","title":"About the model","text":"insert here the documentation from the deliverable","category":"page"},{"location":"Manual/Requirements/#Requirements","page":"Requirements","title":"Requirements","text":"","category":"section"},{"location":"Manual/Requirements/","page":"Requirements","title":"Requirements","text":"Install Julia .. ","category":"page"},{"location":"#Transcomp-Model-Documentation","page":"Home","title":"Transcomp Model Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The Transcomp model is a linear optimization model developed within the EU Horizon project iDesignRES in workpage 1. It is implemented in Julia and is based on the JuMP package. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"The Transcomp model is aimed at modeling developments in subsectors of the transport sector. It is designed in a way that it can be adoptable in its complexity in the representation of the transport sector - being flexible in its ability to adjust in to the level of availibility of granular data - and being costumizable in the scope if representation of the the transport sector, i.e. included transport segments. Further, features are provided that allow the soft linking to traditional transport models and energy system models.","category":"page"},{"location":"#Manual-outline","page":"Home","title":"Manual outline","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [TransComp]\nOrder   = [:function, :type]","category":"page"},{"location":"#Main.TransComp.base_define_variables-Tuple{JuMP.Model, Dict}","page":"Home","title":"Main.TransComp.base_define_variables","text":"base_define_variables(model::Model, data_structures::Dict)\n\nDefines the variables for the model.\n\nArguments\n\nmodel::Model: JuMP model\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"#Main.TransComp.check_input_file-Tuple{String}","page":"Home","title":"Main.TransComp.check_input_file","text":"check_input_file(path_to_source_file::String)\n\nCheck if the input file exists and is a YAML file.\n\nArguments\n\npath_to_source_file::String: The path to the input file.\n\n\n\n\n\n","category":"method"},{"location":"#Main.TransComp.check_model_parametrization-Tuple{Dict, Vector{String}}","page":"Home","title":"Main.TransComp.check_model_parametrization","text":"check_model_parametrization(data_dict::Dict, required_keys::Vector{String})\n\nCheck if the required keys are present in the model data.\n\nArguments\n\ndata_dict::Dict: The input data.\n\nReturns\n\nBool: True if the required keys are present, false otherwise.\n\n\n\n\n\n","category":"method"},{"location":"#Main.TransComp.check_required_keys-Tuple{Dict, Vector{String}}","page":"Home","title":"Main.TransComp.check_required_keys","text":"check_required_keys(data_dict::Dict, required_keys::Vector{String})\n\nCheck if the required keys are present in the input data.\n\nArguments\n\ndata_dict::Dict: The input data.\n\n\n\n\n\n","category":"method"},{"location":"#Main.TransComp.constraint_demand_coverage-Tuple{JuMP.Model, Any}","page":"Home","title":"Main.TransComp.constraint_demand_coverage","text":"constraint_demand_coverage(model::JuMP.Model, data_structures::Dict)\n\nCreates constraint for demand coverage.\n\nArguments\n\nmodel::JuMP.Model: JuMP model\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"#Main.TransComp.constraint_fueling_demand-Tuple{JuMP.Model, Dict}","page":"Home","title":"Main.TransComp.constraint_fueling_demand","text":"constraint_fueling_demand(model::JuMP.Model, data_structures::Dict)\n\nConstraints for fueling demand at nodes and edges.\n\nArguments\n\nmodel::JuMP.Model: JuMP model\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"#Main.TransComp.constraint_fueling_infrastructure-Tuple{JuMP.Model, Dict}","page":"Home","title":"Main.TransComp.constraint_fueling_infrastructure","text":"constraint_vehicle_purchase(model::JuMP.Model, data_structures::Dict)\n\nConstraints for the sizing of fueling infrastructure at nodes and edges.\n\nArguments\n\nmodel::JuMP.Model: JuMP model\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"#Main.TransComp.constraint_mode_shift-Tuple{JuMP.Model, Dict}","page":"Home","title":"Main.TransComp.constraint_mode_shift","text":"constraint_mode_shift(model::JuMP.Model, data_structures::Dict)\n\nConstraints for the rate of the mode shfit.\n\nArguments\n\nmodel::JuMP.Model: JuMP model\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"#Main.TransComp.constraint_monetary_budget-Tuple{JuMP.Model, Dict}","page":"Home","title":"Main.TransComp.constraint_monetary_budget","text":"constraint_vehicle_purchase(model::JuMP.Model, data_structures::Dict)\n\nCreates constraints for monetary budget for vehicle purchase by route.\n\nArguments\n\nmodel::JuMP.Model: JuMP model\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"#Main.TransComp.constraint_vehicle_aging-Tuple{JuMP.Model, Dict}","page":"Home","title":"Main.TransComp.constraint_vehicle_aging","text":"constraint_vehicle_aging(model::JuMP.Model, data_structures::Dict)\n\nCreates constraints for vehicle aging.\n\nArguments\n\nmodel::JuMP.Model: JuMP model\ndata_structures::Dict: dictionary with the input data\n\nReturns\n\nmodel::JuMP.Model: JuMP model with the constraints added\n\n\n\n\n\n","category":"method"},{"location":"#Main.TransComp.constraint_vehicle_sizing-Tuple{JuMP.Model, Dict}","page":"Home","title":"Main.TransComp.constraint_vehicle_sizing","text":"constraint_vehicle_sizing(model::JuMP.Model, data_structures::Dict)\n\nCreates constraint for vehicle sizing.\n\nArguments\n\nmodel::JuMP.Model: JuMP model\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"#Main.TransComp.constraint_vehicle_stock_shift-Tuple{JuMP.Model, Dict}","page":"Home","title":"Main.TransComp.constraint_vehicle_stock_shift","text":"constraint_vehicle_stock_shift(model::JuMP.Model, data_structures::Dict)\n\nConstraints for vehicle stock turnover.\n\nArguments\n\nmodel::JuMP.Model: JuMP model\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"#Main.TransComp.create_m_tv_pairs-Tuple{Vector{Main.TransComp.TechVehicle}, Vector{Main.TransComp.Mode}}","page":"Home","title":"Main.TransComp.create_m_tv_pairs","text":"create_m_tv_pairs(techvehicle_list::Vector{TechVehicle}, mode_list::Vector{Mode})\n\nCreates a set of pairs of mode and techvehicle IDs.\n\nArguments\n\ntechvehicle_list::Vector{TechVehicle}: list of techvehicles\nmode_list::Vector{Mode}: list of modes\n\nReturns\n\nmtvpairs::Set: set of pairs of mode and techvehicle IDs\n\n\n\n\n\n","category":"method"},{"location":"#Main.TransComp.create_model-Tuple{Any, String}","page":"Home","title":"Main.TransComp.create_model","text":"create_model(model::JuMP.Model, data_structures::Dict)\n\nDefinition of JuMP.model and adding of variables.\n\nArguments\n\nmodel::JuMP.Model: JuMP model\ndata_structures::Dict: dictionary with the input data and parsing of the input parameters\n\nReturns\n\nmodel::JuMP.Model: JuMP model with the variables added\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"#Main.TransComp.create_p_r_k_e_set-Tuple{Vector{Main.TransComp.Odpair}}","page":"Home","title":"Main.TransComp.create_p_r_k_e_set","text":"create_p_r_k_e_set(odpairs::Vector{Odpair})\n\nCreates a set of pairs of product, odpair, path, and element IDs.\n\nArguments\n\nodpairs::Vector{Odpair}: list of odpairs\n\nReturns\n\nprkepairs::Set: set of pairs of product, odpair, path, and element IDs\n\n\n\n\n\n","category":"method"},{"location":"#Main.TransComp.create_p_r_k_n_set-Tuple{Vector{Main.TransComp.Odpair}}","page":"Home","title":"Main.TransComp.create_p_r_k_n_set","text":"create_p_r_k_n_set(odpairs::Vector{Odpair})\n\nCreates a set of pairs of product, odpair, path, and element IDs.\n\nArguments\n\nodpairs::Vector{Odpair}: list of odpairs\n\nReturns\n\nprknpairs::Set: set of pairs of product, odpair, path, and element IDs\n\n\n\n\n\n","category":"method"},{"location":"#Main.TransComp.create_p_r_k_set-Tuple{Vector{Main.TransComp.Odpair}}","page":"Home","title":"Main.TransComp.create_p_r_k_set","text":"create_p_r_k_set(odpairs::Vector{Odpair})\n\nCreates a set of pairs of product, odpair, and path IDs.\n\nArguments\n\nodpairs::Vector{Odpair}: list of odpairs\n\nReturns\n\nprk_pairs::Set: set of pairs of product, odpair, and path IDs\n\n\n\n\n\n","category":"method"},{"location":"#Main.TransComp.create_r_k_set-Tuple{Vector{Main.TransComp.Odpair}}","page":"Home","title":"Main.TransComp.create_r_k_set","text":"create_r_k_set(odpairs::Vector{Odpair})\n\nCreates a set of pairs of odpair and path IDs.\n\nArguments\n\nodpairs::Vector{Odpair}: list of odpairs\n\nReturns\n\nrkpairs::Set: set of pairs of odpair and path IDs\n\n\n\n\n\n","category":"method"},{"location":"#Main.TransComp.create_tv_id_set-Tuple{Vector{Main.TransComp.TechVehicle}, Vector{Main.TransComp.Mode}}","page":"Home","title":"Main.TransComp.create_tv_id_set","text":"create_tv_id_set(techvehicle_list::Vector{TechVehicle}, mode_list::Vector{Mode})\n\nCreates a list of techvehicle IDs.\n\nArguments\n\ntechvehicle_list::Vector{TechVehicle}: list of techvehicles\nmode_list::Vector{Mode}: list of modes\n\nReturns\n\ntechvehicleids2::Set: set of techvehicle IDs\n\n\n\n\n\n","category":"method"},{"location":"#Main.TransComp.create_v_t_set-Tuple{Vector{Main.TransComp.TechVehicle}}","page":"Home","title":"Main.TransComp.create_v_t_set","text":"create_v_t_set(techvehicle_list::Vector{TechVehicle})\n\nCreates a set of pairs of techvehicle IDs.\n\nArguments\n\ntechvehicle_list::Vector{TechVehicle}: list of techvehicles\n\nReturns\n\ntvpairs::Set: set of pairs of techvehicle IDs\n\n\n\n\n\n","category":"method"},{"location":"#Main.TransComp.depreciation_factor-Tuple{Any, Any}","page":"Home","title":"Main.TransComp.depreciation_factor","text":"depreciation_factor(y, g)\n\nCalculate the depreciation factor for a vehicle based on its age.\n\nArguments\n\ny::Int: The year of the vehicle.\ng::Int: The year the vehicle was purchased.\n\nReturns\n\nFloat64: The depreciation factor.\n\n\n\n\n\n","category":"method"},{"location":"#Main.TransComp.get_input_data-Tuple{String}","page":"Home","title":"Main.TransComp.get_input_data","text":"get_input_data(path_to_source_file::String)\n\nThis function reads the input data and checks requirements for the content of the file.\n\nArguments\n\npathtosource_file::String: path to the source file\n\nReturns\n\ndata_dict::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"#Main.TransComp.objective-Tuple{JuMP.Model, Dict}","page":"Home","title":"Main.TransComp.objective","text":"objective(model::Model, data_structures::Dict)\n\nDefinition of the objective function for the optimization model.\n\nArguments\n\nmodel::Model: JuMP model\ndata_structures::Dict: dictionary with the input data\n\n\n\n\n\n","category":"method"},{"location":"#Main.TransComp.parse_data-Tuple{Dict}","page":"Home","title":"Main.TransComp.parse_data","text":"parse_data(data_dict::Dict)\n\nParses the input data into the corresponding parameters in struct format from structs.jl.\n\nArguments\n\ndata_dict::Dict: dictionary with the input data\n\nReturns\n\ndata_structures::Dict: dictionary with the parsed data\n\n\n\n\n\n","category":"method"},{"location":"#Main.TransComp.save_results-Tuple{JuMP.Model, String}","page":"Home","title":"Main.TransComp.save_results","text":"save_results(model::Model, case_name::String)\n\nSaves the results of the optimization model to YAML files.\n\nArguments\n\nmodel::Model: JuMP model\ncase_name::String: name of the case\n\nReturns\n\noutput_file::String: name of the output file\n\n\n\n\n\n","category":"method"},{"location":"#Main.TransComp.Edge","page":"Home","title":"Main.TransComp.Edge","text":"Edge\n\nAn 'Edge' represents a connection between two nodes and is a representation of connecting transport infrastructure.\n\nFields\n\nid::Int: unique identifier of the edge\nname::String: name of the connection\nlength::Float64: length of the connection in km\nfrom::Node: the node from which the edge starts\nto::Node: the node to which the edge ends\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.Emission_constraints_by_mode","page":"Home","title":"Main.TransComp.Emission_constraints_by_mode","text":"Emission_constraints_by_mode\n\nAn 'Emissionconstraintsby_mode' describes emissions constrained for a mode.\n\nFields\n\nid::Int: unique identifier of the emission constraint\nmode::Mode: mode of transport\nemission::Float64: emission constraint of the vehicle type\nyear::Int: year of the expected emission constraint\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.Emission_constraints_by_year","page":"Home","title":"Main.TransComp.Emission_constraints_by_year","text":"Emission_constraints_by_year\n\nAn 'Emissionconstraintsby_year' describes an emission goal for a specific year for the total emissions.\n\nFields\n\nid::Int: unique identifier of the emission constraint\nemission::Float64: emission constraint\nyear::Int: year of the expected emission constraint\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.F_init_mode_share","page":"Home","title":"Main.TransComp.F_init_mode_share","text":"F_init_mode_share\n\nA 'Finitmode_share' describes the initial mode share of a transport mode and is an attribute of a travel connection.\n\nFields\n\nid::Int: unique identifier of the initial mode share\nmode::Mode: mode of transport\nshare::Float64: share of the mode in the initial mode share\nf_init::Float64: initial number of trips in p/year or t/year\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.FinancialStatus","page":"Home","title":"Main.TransComp.FinancialStatus","text":"FinancialStatus\n\nA 'FinancialStatus' describes a demographic group based on what there average budget for transportation-related expenses is.\n\nFields\n\nid::Int: unique identifier of the financial status\nname::String: name of the financial status\nVoT: value of time in €/h\nmonetary_budget_operational: budget for operational costs in €/year\nmonetary_budget_operational_lb: lower bound of the budget for operational costs in €/year\nmonetary_budget_operational_ub: upper bound of the budget for operational costs in €/year\nmonetary_budget_purchase: budget for purchasing costs in €/year\nmonetary_budget_purchase_lb: lower bound of the budget for purchasing costs in €/year\nmonetary_budget_purchase_ub: upper bound of the budget for purchasing costs in €/year\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.Fuel","page":"Home","title":"Main.TransComp.Fuel","text":"Fuel\n\nA 'Fuel' represents the energy source used for the vehicle propulsion. \n\nFields\n\nid::Int: unique identifier of the fuel\nname::String: name of the fuel\nemission_factor::Float64: emission factor of the fuel in gCO2/kWh\ncost_per_kWh: cost per kWh of the fuel in €\ncost_per_kW: cost per kW of the fuel in €\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.Generation","page":"Home","title":"Main.TransComp.Generation","text":"Generation\n\nA 'Generation' referes to model year of a vehicle type to include the variation in vehicle performance parameters depending on when a vehicle was produced.\n\nFields\n\nid::Int: unique identifier of the generation\nyear::Int: year of the generation\ny::Int: year of the generation relative to the initial year of the optimization horizon\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.InitialVehicleStock","page":"Home","title":"Main.TransComp.InitialVehicleStock","text":"InitialVehicleStock\n\nAn 'InitialVehicleStock' represents a vehicle fleet that exisits at the initial year of the optimization horizon.\n\nFields\n\nid::Int: unique identifier of the initial vehicle stock\ntechvehicle::TechVehicle: vehicle type and technology of the vehicle\nyear_of_purchase::Int: year in which the vehicle was purchased\nstock::Float64: number of vehicles of this type in the initial vehicle stock\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.Mode","page":"Home","title":"Main.TransComp.Mode","text":"Mode\n\nA 'Mode' represents a transport mode. Transport modes may differ either by the infrastructure used (for example, road vs. rail) or by the used vehicle type (for example, private passenger car vs. bus) that directly influences the travel time but excludes a differentiation based on technology.\n\nFields\n\nid::Int: unique identifier of the mode\nname::String: name of the mode\nquantify_by_vehs::Bool: if for this mode vehicles stock is sized or not. If this mode is considered with levelized costs, including the costs for vehicles and related costs.\ncost_per_ukm::Array{Float64, 1}: cost per km in €/km (only relevant when quantifybyvehs is false) \nemission_factor::Array{Float64,1}: emission factor of the mode in gCO2/ukm (only relevant when quantifybyvehs is false)\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.Mode_share_max","page":"Home","title":"Main.TransComp.Mode_share_max","text":"Mode_share_max\n\nMaximum mode shares of a transport mode independent of year, i.e. over total horizon.\n\nFields\n\nid::Int: unique identifier of the mode share\nmode::Mode: mode of transport\nshare::Float64: maximum share of the mode\nfinancial_status::Array{FinancialStatus, 1}: array of financial status that is affected by this mode share constraint\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.Mode_share_max_by_year","page":"Home","title":"Main.TransComp.Mode_share_max_by_year","text":"Mode_share_max_by_year\n\nMaximum mode shares of a transport mode in a specific year.\n\nFields\n\nid::Int: unique identifier of the mode share\nmode::Mode: mode of transport\nshare::Float64: maximum share of the mode\nyear::Int: year of the maximum mode share\nfinancial_status::Array{FinancialStatus, 1}: financial status that is affected by this mode share constraint\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.Mode_share_min","page":"Home","title":"Main.TransComp.Mode_share_min","text":"Mode_share_min\n\nMaximum mode shares of a transport mode independent of year, i.e. over total horizon.\n\nFields\n\nid::Int: unique identifier of the mode share\nmode::Mode: mode of transport\nshare::Float64: maximum share of the mode\nfinancial_status::Array{FinancialStatus, 1}: array of financial status that is affected by this mode share constraint\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.Mode_share_min_by_year","page":"Home","title":"Main.TransComp.Mode_share_min_by_year","text":"Mode_share_min_by_year\n\nMinimum mode shares of a transport mode in a specific year.\n\nFields\n\nid::Int: unique identifier of the mode share\nmode::Mode: mode of transport\nshare::Float64: minimum share of the mode\nyear::Int: year of the minimum mode share\nfinancial_status::Array{FinancialStatus, 1}: financial status that is affected by this mode share constraint\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.Node","page":"Home","title":"Main.TransComp.Node","text":"Node\n\nA 'Node' represents geographic region. \n\nFields\n\nid::Int: unique identifier of the node\nname::String: name the region\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.Odpair","page":"Home","title":"Main.TransComp.Odpair","text":"Odpair\n\nAn 'Odpair' describes transport demand. It may take place between two regions but origin and destination may al so \n\nFields\n\nid::Int: unique identifier of the odpair\norigin::Node: origin of the transport demand\ndestination::Node: destination of the transport demand\npaths::Array{Path, 1}: possible paths between origin and destination\nF: number of trips in p/year or t/year\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.Path","page":"Home","title":"Main.TransComp.Path","text":"Path\n\nA 'Path' represents a possible route between two nodes. This sequence includes the nodes that are passed through and the length of the path.\n\nFields\n\nid::Int: unique identifier of the path\nname::String: name of the path\nlength::Float64: length of the path in km\nsequence: sequence of nodes and edges that are passed through\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.Product","page":"Home","title":"Main.TransComp.Product","text":"Product\n\nA 'Product' represents either a good or a service that is being transported. This may include passengers, or different types of products in the freight transport. The differentiation of transported products related to the different needs for transportation and, therefore, different possible sets of transport modes, vehicle types and drivetrain technologies are available for transport.\n\nFields\n\nid::Int: unique identifier of the product\nname::String: name of the product\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.Regiontype","page":"Home","title":"Main.TransComp.Regiontype","text":"Regiontype\n\nA 'Regiontype' describes a region based on its characteristics that induces differences in transportation needs (for example, urban vs. rural area).\n\nFields\n\nid::Int: unique identifier of the regiontype\nname::String: name of the regiontype\nspeed::Float64: average speed in km/h\ncosts_var::Array{Float64, 1}: variable costs in €/vehicle-km\ncosts_fix::Array{Float64, 1}: fixed costs in €/year\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.TechVehicle","page":"Home","title":"Main.TransComp.TechVehicle","text":"TechVehicle\n\nA 'TechVehicle' represents a vehicle that is used for transportation. This includes the vehicle type, the technology used in the vehicle, the capital and maintenance costs, the load capacity, the specific consumption, the lifetime, the annual range, the number of vehicles of this type, the battery capacity, and the peak charging power.\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.TechVehicle_share_max","page":"Home","title":"Main.TransComp.TechVehicle_share_max","text":"TechVehicle_share_max\n\nMaximum vehicle type shares of a TechVehicle independent of year, i.e. over total horizon.\n\nFields\n\nid::Int: unique identifier of the TechVehicle share\ntechvehicle::TechVehicle: TechVehicle\nshare::Float64: maximum share of the TechVehicle\nfinancial_status::Array{FinancialStatus, 1}: array of financial status that is affected by this TechVehicle share constraint\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.TechVehicle_share_max_by_year","page":"Home","title":"Main.TransComp.TechVehicle_share_max_by_year","text":"TechVehicle_share_max_by_year\n\nMaximum vehicle type shares of a TechVehicle in a specific year.\n\nFields\n\nid::Int: unique identifier of the TechVehicle share\ntechvehicle::TechVehicle: TechVehicle\nshare::Float64: maximum share of the TechVehicle\nyear::Int: year of the maximum TechVehicle share\nfinancial_status::Array{FinancialStatus, 1}: financial status that is affected by this TechVehicle share constraint\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.TechVehicle_share_min","page":"Home","title":"Main.TransComp.TechVehicle_share_min","text":"TechVehicle_share_min\n\nMinimum vehicle type shares of a TechVehicle independent of year, i.e. over total horizon.\n\nFields\n\nid::Int: unique identifier of the TechVehicle share\ntechvehicle::TechVehicle: TechVehicle\nshare::Float64: minimum share of the TechVehicle\nfinancial_status::Array{FinancialStatus, 1}: array of financial status that is affected by this TechVehicle share constraint\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.TechVehicle_share_min_by_year","page":"Home","title":"Main.TransComp.TechVehicle_share_min_by_year","text":"TechVehicle_share_min_by_year\n\nMinimum vehicle type shares of a TechVehicle in a specific year.\n\nFields\n\nid::Int: unique identifier of the TechVehicle share\ntechvehicle::TechVehicle: TechVehicle\nshare::Float64: minimum share of the TechVehicle\nyear::Int: year of the minimum TechVehicle share\nfinancial_status::Array{FinancialStatus, 1}: financial status that is affected by this TechVehicle share constraint\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.Technology","page":"Home","title":"Main.TransComp.Technology","text":"Technology\n\nA 'Technology' represents the drivetrain technology used in the vehicle.\n\nFields\n\nid::Int: unique identifier of the technology\nname::String: name of the technology\nfuel::Fuel: fuel used by the technology\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.Technology_share_max","page":"Home","title":"Main.TransComp.Technology_share_max","text":"Technology_share_max\n\nMaximum technology shares of a vehicle technology independent of year, i.e. over total horizon.\n\nFields\n\nid::Int: unique identifier of the technology share\ntechnology::Technology: vehicle technology\nshare::Float64: maximum share of the technology\nfinancial_status::Array{FinancialStatus, 1}: array of financial status that is affected by this technology share constraint\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.Technology_share_max_by_year","page":"Home","title":"Main.TransComp.Technology_share_max_by_year","text":"Technology_share_max_by_year\n\nMaximum technology shares of a vehicle technology in a specific year.\n\nFields\n\nid::Int: unique identifier of the technology share\ntechnology::Technology: vehicle technology\nshare::Float64: maximum share of the technology\nyear::Int: year of the maximum technology share\nfinancial_status::Array{FinancialStatus, 1}: financial status that is affected by this technology share constraint\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.Technology_share_min","page":"Home","title":"Main.TransComp.Technology_share_min","text":"Technology_share_min\n\nMinimum technology shares of a vehicle technology independent of year, i.e. over total horizon.\n\nFields\n\nid::Int: unique identifier of the technology share\ntechnology::Technology: vehicle technology\nshare::Float64: minimum share of the technology\nfinancial_status::Array{FinancialStatus, 1}: array of financial status that is affected by this technology share constraint\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.Technology_share_min_by_year","page":"Home","title":"Main.TransComp.Technology_share_min_by_year","text":"Technology_share_min_by_year\n\nMinimum technology shares of a vehicle technology in a specific year.\n\nFields\n\nid::Int: unique identifier of the technology share\ntechnology::Technology: vehicle technology\nshare::Float64: minimum share of the technology\nyear::Int: year of the minimum technology share\nfinancial_status::Array{FinancialStatus, 1}: financial status that is affected by this technology share constraint\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.Transportation_speeds","page":"Home","title":"Main.TransComp.Transportation_speeds","text":"Transportation_speeds\n\nA 'Speed' describes the speed of a vehicle type in a specific year.\n\nFields\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.VehicleType_share_max","page":"Home","title":"Main.TransComp.VehicleType_share_max","text":"VehicleType_share_max\n\nMaximum vehicle type shares of a vehicle type independent of year, i.e. over total horizon.\n\nFields\n\nid::Int: unique identifier of the vehicle type share\nvehicle_type::Vehicletype: vehicle type\nshare::Float64: maximum share of the vehicle type\nfinancial_status::Array{FinancialStatus, 1}: array of financial status that is affected by this vehicle type share constraint\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.VehicleType_share_max_by_year","page":"Home","title":"Main.TransComp.VehicleType_share_max_by_year","text":"VehicleType_share_max_by_year\n\nMaximum vehicle type shares of a vehicle type in a specific year.\n\nFields\n\nid::Int: unique identifier of the vehicle type share\nvehicle_type::Vehicletype: vehicle type\nshare::Float64: maximum share of the vehicle type\nyear::Int: year of the maximum vehicle type share\nfinancial_status::Array{FinancialStatus, 1}: financial status that is affected by this vehicle type share constraint\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.VehicleType_share_min","page":"Home","title":"Main.TransComp.VehicleType_share_min","text":"VehicleType_share_min\n\nMinimum vehicle type shares of a vehicle type independent of year, i.e. over total horizon.\n\nFields\n\nid::Int: unique identifier of the vehicle type share\nvehicle_type::Vehicletype: vehicle type\nshare::Float64: minimum share of the vehicle type\nfinancial_status::Array{FinancialStatus, 1}: array of financial status that is affected by this vehicle type share constraint\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.VehicleType_share_min_by_year","page":"Home","title":"Main.TransComp.VehicleType_share_min_by_year","text":"VehicleType_share_min_by_year\n\nMinimum vehicle type shares of a vehicle type in a specific year.\n\nFields\n\nid::Int: unique identifier of the vehicle type share\nvehicle_type::Vehicletype: vehicle type\nshare::Float64: minimum share of the vehicle type\nyear::Int: year of the minimum vehicle type share\nfinancial_status::Array{FinancialStatus, 1}: financial status that is affected by this vehicle type share constraint\n\n\n\n\n\n","category":"type"},{"location":"#Main.TransComp.Vehicletype","page":"Home","title":"Main.TransComp.Vehicletype","text":"Vehicletype\n\nA 'Vehicletype' represents a type of vehicle that is used for transportation. This may be for example, small passenger cars, buses, or light-duty trucks.\n\nFields\n\nid::Int: unique identifier of the vehicle type\nname::String: name of the vehicle type\nmode::Mode: mode of transport that the vehicle type is used for\nproduct::Product: product that the vehicle type is used for\n\n\n\n\n\n","category":"type"}]
}
